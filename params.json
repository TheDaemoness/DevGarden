{"name":"DevGarden","tagline":"A versatile and modern IDE for versatile and modern people.","body":"Modern IDEs are very much in the business of handling as many of the gritty project management details for their users as possible. This isn't an inherently bad thing, but what is bad is that often those IDEs do a rather poor job of supporting other project management systems, or setting up their own to be used in a manner convenient to someone without the IDE. To do so wouldn't defeat the purpose of the IDE, instead it merely denies courtesy to those who don’t use the same IDE.\r\n\r\nWhat about most IDEs offering an “import project” feature? Often, such support is much more awkward than it needs to be. In some cases, Qt Creator will generate three project files if not using qmake or cmake, and it often excludes files relevant to the project when using cmake building. In Netbeans, Eclipse, and Visual Studio, the options for setting up compilation settings to use external build systems are often buried. And then, the user needs to set up building on their own.\r\n\r\nWe need an IDE that offers minimal project management of its own, one that plays nice with various build systems. Such an IDE would offer the ability to dynamically generate IDE-agnostic build scripts or build script generation files for directory trees (such as CMakeLists.txt or Makefiles), and rely on those over its own implementation. They should be structured in a manner that is convenient for anyone without the IDE to use. It should function on its own as an editor in a similar manner to Atom, but also be able to run and generate scripts and build systems in the root directory at the press of a button. This way, anyone without the same IDE can edit, build, and use the code with minimal pain.\r\n\r\nIt should be accessible for beginning programmers, offer simple and painless project setup, and support a multitude of languages. However, it should also offer a wide variety of power user features, such as being able to effortlessly pipe files into user-generated scripts (for example, to generate enumerations from lexer definitions). It must be highly extensible, but at its core simple and clean.\r\n\r\nDevGarden fulfills those needs and many more. It's in extremely early alpha, but together we can make the flexible IDE we deserve.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}